plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.graalvm.buildtools.native' version '0.9.27'
	id 'com.bmuschko.docker-remote-api' version '9.3.4'

	id 'org.liquibase.gradle' version '2.2.0'

}

configurations {
	liquibaseRuntime.extendsFrom runtime
}

group = 'com.ms'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java:5.1.34'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.apache.commons:commons-lang3'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	liquibaseRuntime 'org.liquibase:liquibase-core:4.16.1'
	liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.2'
	liquibaseRuntime 'info.picocli:picocli:4.6.1'
	liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
	liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
	liquibaseRuntime sourceSets.main.output
}

tasks.named('test') {
	useJUnitPlatform()
}

task dockerImageTaging(type: Exec){
	commandLine "docker", "tag", "${rootProject.name}:${version} 55069816/${rootProject.name}:${version}"

}

task dockerPushIMage(type: Exec){
	dependsOn bootBuildImage
	dependsOn dockerImageTaging
	commandLine "docker", "push", "55069816/${rootProject.name}:${version}"
}





//loading properties file.
Properties liquibaseProps = new Properties()
liquibaseProps.load(new FileInputStream(file("src/main/resources/liquibase-task.properties")))

Properties applicationProps = new Properties()
applicationProps.load(new FileInputStream(file("src/main/resources/application.properties")))

task liquibaseDiffChangeLog(type: JavaExec) {
	group = "liquibase"
	classpath sourceSets.main.runtimeClasspath
	classpath configurations.liquibaseRuntime
	mainClass = "liquibase.integration.commandline.Main"
	args "--changeLogFile="+liquibaseProps.getProperty('liquibase.changelog.path')+ "db.changelog-"+ buildTimestamp()+"-schema.groovy"
	args "--referenceUrl=hibernate:spring:" + liquibaseProps.getProperty('liquibase.domain.package') + "?dialect=" + applicationProps.getProperty('spring.jpa.properties.hibernate.dialect')
	args "--username=" + applicationProps.getProperty('spring.datasource.username')
	args "--password=" + applicationProps.getProperty('spring.datasource.password')
	args "--url=" + applicationProps.getProperty('spring.datasource.url')
	args "--driver=" + applicationProps.getProperty('spring.datasource.driverClassName')
	args "--referenceDriver=" + applicationProps.getProperty('spring.datasource.driverClassName')
	args "diffChangeLog"
}

def buildTimestamp() {
	def date = new Date()
	def formattedDate = date.format('yyyyMMdd_HHmmss')
	return formattedDate
}